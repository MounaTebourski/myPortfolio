{"version":3,"sources":["components/projects/Projects.jsx"],"names":["Projects","useState","currentSlide","setCurrentSlide","navigate","useNavigate","useLocale","locale","isEnglish","handleClick","way","projectData","length","className","id","name","content","style","transform","map","d","titleEn","titleFr","descriptionEn","descriptionFr","languages","onClick","type","src","process","img","alt"],"mappings":"uPASe,SAASA,IAEtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAWC,cAGf,EAA4BC,cAA5B,mBAAOC,EAAP,KACMC,GADN,KAC6B,OAAXD,GAEZE,EAAc,SAACC,GAEfP,EADI,SAARO,EACoBR,EAAe,EAAIA,EAAe,EAAI,EACtCA,EAAeS,IAAYC,OAAS,EAAIV,EAAe,EAAI,IAGjF,OACE,sBAAKW,UAAU,WAAWC,GAAG,WAA7B,UACE,eAAC,IAAD,WACE,+DACA,sBAAMC,KAAK,cAAcC,QAAQ,sCAElC,6BAAI,cAAC,IAAD,CAAkBF,GAAG,yBAC1B,qBACED,UAAU,SACVI,MAAO,CAAEC,UAAU,eAAD,OAAgC,IAAfhB,EAAjB,QAFpB,SAIGS,IAAYQ,KAAI,SAACC,GAAD,OACf,qBAAKP,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,6BAAKL,EAAYY,EAAEC,QAAUD,EAAEE,UAC/B,4BAAId,EAAYY,EAAEG,cAAgBH,EAAEI,gBACpC,6CAAgBJ,EAAEK,gBAEnB,wBAAQC,QAAS,WACftB,EAAS,aAAD,OAAcgB,EAAEN,MACvBa,KAAK,SAFR,SAEkBnB,EAAY,eAAiB,0BAElD,qBAAKK,UAAU,QAAf,SACE,qBACEe,IAAG,UAAKC,eAAL,YAA+BT,EAAEU,KACpCC,IAAI,qBAfoBX,EAAEN,SAsBtC,qBACEc,IAAI,mBACJf,UAAU,aACVkB,IAAI,GACJL,QAAS,kBAAMjB,EAAY,WAE7B,qBACEmB,IAAI,mBACJf,UAAU,cACVkB,IAAI,GACJL,QAAS,kBAAMjB","file":"static/js/7.fab86332.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport \"./projects.scss\";\r\nimport { projectData} from \"../../data\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useLocale } from '../LocaleProvider';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Projects() {\r\n \r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  let navigate = useNavigate();\r\n  \r\n  //toggle la langue fr/en\r\n  const [locale, setLocale] = useLocale();\r\n  const isEnglish = locale === 'en';\r\n   \r\n  const handleClick = (way) => {\r\n    way === \"left\"\r\n      ? setCurrentSlide(currentSlide > 0 ? currentSlide - 1 : 2)\r\n      : setCurrentSlide(currentSlide < projectData.length - 1 ? currentSlide + 1 : 0);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"projects\" id=\"projects\">\r\n      <Helmet>\r\n        <title>Projects - Mouna Tebourski</title>\r\n        <meta name=\"description\" content=\"Page des projets réalisé\"/>\r\n      </Helmet>\r\n       <h1><FormattedMessage id=\"app.projects.title\" /></h1>\r\n      <div\r\n        className=\"slider\"\r\n        style={{ transform: `translateX(-${currentSlide * 100}vw)` }}\r\n      >\r\n        {projectData.map((d) => (\r\n          <div className=\"container\" key={d.id}>\r\n            <div className=\"item\">\r\n              <div className=\"left\">\r\n                <div className=\"leftContainer\">\r\n                  <h2>{isEnglish ? d.titleEn : d.titleFr}</h2>\r\n                  <p>{isEnglish ? d.descriptionEn : d.descriptionFr}</p>\r\n                  <p>Languages : {d.languages}</p>\r\n                 </div>\r\n                 <button onClick={()=> {\r\n                   navigate(`/projects/${d.id}`);\r\n                 }} type=\"submit\">{isEnglish ? \"More Details\" : \"Plus de Détails\"}</button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/${d.img}`}\r\n                  alt=\"imgProject\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <img\r\n        src=\"assets/arrow.png\"\r\n        className=\"arrow left\"\r\n        alt=\"\"\r\n        onClick={() => handleClick(\"left\")}\r\n      />\r\n      <img\r\n        src=\"assets/arrow.png\"\r\n        className=\"arrow right\"\r\n        alt=\"\"\r\n        onClick={() => handleClick()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}