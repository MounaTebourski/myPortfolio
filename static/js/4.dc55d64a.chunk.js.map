{"version":3,"sources":["components/portfolioList/PortfolioList.jsx","components/modal/Modal.jsx","../../node_modules/style-inject/dist/style-inject.es.js","../../src/react-dimmer.tsx","components/portfolio/Portfolio.jsx"],"names":["PortfolioList","id","title","active","setSelected","className","onClick","Modal","closeModal","img","description","src","alt","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ReactDimmer","isOpen","exitDimmer","zIndex","opacity","blur","saturate","transition","defaultStyle","background","backdropFilter","activeStyle","Portfolio","useState","selected","data","setData","isModalOpen","setModal","useLocale","locale","isEnglish","useEffect","webAppPortfolio","webSitePortfolio","mobilePortfolio","descktopPortfolio","handleClick","prevState","name","content","titleEn","titleFr","map","item","d","descriptionEn","descriptionFr"],"mappings":"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","file":"static/js/4.dc55d64a.chunk.js","sourcesContent":["import \"./portfolioList.scss\";\r\n\r\nexport default function PortfolioList({ id, title, active, setSelected }) {\r\n  return (\r\n    <li\r\n      className={active ? \"portfolioList active\" : \"portfolioList\"}\r\n      onClick={() => setSelected(id)}\r\n    >\r\n      {title}\r\n    </li>\r\n  );\r\n}","import * as React from \"react\";\r\nimport './modal.scss';\r\n//import { useState } from \"react\";\r\n\r\nexport const Modal = ({ closeModal , img , title, description}) => {\r\n    //const [isModalOpen, setModal] = useState(false);\r\n  return (\r\n    <div className=\"modal\">\r\n       <div className=\"modal-body\">\r\n            <div className=\"left\">\r\n                <div className=\"containerImage\">\r\n                    <img src={img} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"wrapper\">\r\n                    <h2>{title}</h2>\r\n                    <div className=\"description\">\r\n                    {description}\r\n                    </div>      \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\r\nimport './react-dimmer.css';\r\n\r\nexport interface IDimmerProps {\r\n  isOpen: boolean;\r\n  exitDimmer: (action: boolean) => void;\r\n  zIndex?: number;\r\n  opacity?: number;\r\n  blur?: number;\r\n  saturate?: number;\r\n  transition?: number;\r\n}\r\n\r\nexport const ReactDimmer = ({ isOpen, exitDimmer, zIndex = 100, opacity = 0.5, blur = 0, saturate = 100, transition = 0.3 }: IDimmerProps) => {\r\n  const defaultStyle = { zIndex: zIndex.toString(), background: 'rgba(0, 0, 0, 0)', backdropFilter: `blur(0px) saturate(100%)`, transition: `${transition}s` };\r\n  const activeStyle = { zIndex: zIndex.toString(), background: `rgba(0, 0, 0, ${opacity})`, backdropFilter: `blur(${blur}px) saturate(${saturate}%)`, transition: `${transition}s` };\r\n\r\n  return (\r\n    <div\r\n      style={isOpen ? activeStyle : defaultStyle}\r\n      onClick={() => {\r\n        exitDimmer(false);\r\n      }}\r\n      className={`dimmer ${isOpen ? 'dimmer-active' : ''}`}\r\n    ></div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport './portfolio.scss';\r\nimport PortfolioList from \"../portfolioList/PortfolioList\";\r\nimport {\r\n  webAppPortfolio,\r\n  webSitePortfolio,\r\n  mobilePortfolio,\r\n  descktopPortfolio,\r\n} from \"../../data\";\r\nimport { Modal } from \"../modal/Modal\";\r\nimport { ReactDimmer } from \"react-dimmer\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useLocale } from '../LocaleProvider';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nexport default function Portfolio() {\r\n  //use state pour changer la categorie\r\n  const [selected, setSelected] = useState(\"webApp\");\r\n  const [data, setData] = useState([]);\r\n  //cet etat controle le model ouvert ou non\r\n  const [isModalOpen, setModal] = useState(false);\r\n  const [locale, setLocale] = useLocale();\r\n  \r\n  //toggle la langue fr/en\r\n  const isEnglish = locale === 'en';\r\n\r\n  const list = [\r\n    {\r\n      id: \"webApp\",\r\n      titleEn: \"Web App\",\r\n      titleFr: \"App Web\",\r\n    },\r\n    {\r\n      id: \"webSite\",\r\n      titleEn: \"Web Site\",\r\n      titleFr: \"Site Web\",\r\n    },\r\n    {\r\n      id: \"mobile\",\r\n      titleEn: \"Mobile App\",\r\n      titleFr: \"App Mobile\",\r\n    },\r\n    {\r\n      id: \"desktop\",\r\n      titleEn: \"Desktop App\",\r\n      titleFr: \"App Bureau\",\r\n    },\r\n  ];\r\n\r\n  //selon la categorie selectionne charger la variable data avecles donnees de cette categorie\r\n  useEffect(() => {\r\n    switch (selected) {\r\n      case \"webApp\":\r\n        setData(webAppPortfolio);\r\n        break;\r\n      case \"webSite\":\r\n        setData(webSitePortfolio);\r\n        break;\r\n      case \"mobile\":\r\n        setData(mobilePortfolio);\r\n        break;\r\n      case \"desktop\":\r\n        setData(descktopPortfolio);\r\n        break;\r\n      default:\r\n        setData(webAppPortfolio);\r\n    }\r\n  }, [selected]);\r\n\r\n  const handleClick = () => {\r\n    setModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n  <div className='portfolio' id=\"portfolio\">\r\n    <Helmet>\r\n    <title>Portfolio - Mouna Tebourski</title>\r\n        <meta name=\"description\" content=\"Page Porfolio de Mouna Tebourski\"/>\r\n    </Helmet>\r\n     <h1><FormattedMessage id=\"app.portfolio.title\" /></h1>\r\n     <ul>\r\n     {list.map((item) => (\r\n       <div key={item.id}>\r\n          <PortfolioList \r\n            title={isEnglish ? item.titleEn : item.titleFr}\r\n            active={selected === item.id}\r\n            setSelected={setSelected}\r\n            id={item.id}\r\n          />\r\n        </div>\r\n        ))}\r\n     </ul>\r\n     <div className=\"container\">\r\n      {data.map((d) => (\r\n            <div key={d.id} className=\"item\" onClick={handleClick}>\r\n                <img\r\n                  src={d.img}\r\n                  alt={d.titleEn}\r\n                />\r\n                <h3>{isEnglish ? d.titleEn : d.titleFr}</h3>\r\n            <div>\r\n             {isEnglish?\r\n             isModalOpen &&  <Modal closeModal={setModal} img={d.img} title={d.titleEn} description={d.descriptionEn} />\r\n            : isModalOpen &&  <Modal closeModal={setModal} img={d.img} title={d.titleFr} description={d.descriptionFr} />\r\n            }\r\n           </div>   \r\n            </div>\r\n           \r\n          ))}\r\n     </div>\r\n     {/*isModalOpen && <Modal closeModal={setModal} />*/}\r\n     <ReactDimmer\r\n                isOpen={isModalOpen}\r\n                exitDimmer={setModal}\r\n                zIndex={100}\r\n                blur={1.5}\r\n              />\r\n      \r\n  </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}